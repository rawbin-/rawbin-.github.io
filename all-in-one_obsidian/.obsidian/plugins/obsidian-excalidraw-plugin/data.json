{
  "folder": "Excalidraw",
  "embedUseExcalidrawFolder": false,
  "templateFilePath": "Excalidraw/Template.excalidraw",
  "scriptFolderPath": "Excalidraw/Scripts",
  "compress": false,
  "autosave": true,
  "autosaveInterval": 15000,
  "autosaveIntervalDesktop": 15000,
  "autosaveIntervalMobile": 10000,
  "drawingFilenamePrefix": "Drawing ",
  "drawingEmbedPrefixWithFilename": true,
  "drawingFilnameEmbedPostfix": " ",
  "drawingFilenameDateTime": "YYYY-MM-DD HH.mm.ss",
  "useExcalidrawExtension": true,
  "previewImageType": "SVGIMG",
  "allowImageCache": true,
  "displayExportedImageIfAvailable": false,
  "previewMatchObsidianTheme": false,
  "width": "400",
  "dynamicStyling": "colorful",
  "isLeftHanded": false,
  "iframeMatchExcalidrawTheme": true,
  "matchTheme": false,
  "matchThemeAlways": false,
  "matchThemeTrigger": false,
  "defaultMode": "normal",
  "defaultPenMode": "never",
  "allowPinchZoom": false,
  "allowWheelZoom": false,
  "zoomToFitOnOpen": true,
  "zoomToFitOnResize": true,
  "zoomToFitMaxLevel": 2,
  "linkPrefix": "üìç",
  "urlPrefix": "üåê",
  "parseTODO": false,
  "todo": "‚òê",
  "done": "üóπ",
  "hoverPreviewWithoutCTRL": false,
  "linkOpacity": 1,
  "openInAdjacentPane": false,
  "openInMainWorkspace": true,
  "showLinkBrackets": true,
  "allowCtrlClick": true,
  "forceWrap": false,
  "pageTransclusionCharLimit": 200,
  "wordWrappingDefault": 0,
  "removeTransclusionQuoteSigns": true,
  "iframelyAllowed": true,
  "pngExportScale": 1,
  "exportWithTheme": true,
  "exportWithBackground": true,
  "exportPaddingSVG": 10,
  "keepInSync": false,
  "autoexportSVG": false,
  "autoexportPNG": false,
  "autoExportLightAndDark": false,
  "autoexportExcalidraw": false,
  "embedType": "excalidraw",
  "embedWikiLink": true,
  "syncExcalidraw": false,
  "experimentalFileType": false,
  "experimentalFileTag": "‚úèÔ∏è",
  "experimentalLivePreview": true,
  "experimentalEnableFourthFont": false,
  "experimantalFourthFont": "Virgil",
  "fieldSuggester": true,
  "compatibilityMode": false,
  "drawingOpenCount": 0,
  "library": "deprecated",
  "library2": {
    "type": "excalidrawlib",
    "version": 2,
    "source": "https://github.com/zsviczian/obsidian-excalidraw-plugin/releases/tag/1.9.28",
    "libraryItems": []
  },
  "imageElementNotice": true,
  "mdSVGwidth": 500,
  "mdSVGmaxHeight": 800,
  "mdFont": "Virgil",
  "mdFontColor": "Black",
  "mdBorderColor": "Black",
  "mdCSS": "",
  "scriptEngineSettings": {
    "Downloaded/Normalize Selected Arrows": {
      "Gap": {
        "value": 8,
        "description": "The value of the gap between the connection line and the element, which must be greater than 0. If you want the connector to be next to the element, set it to 1."
      }
    },
    "Downloaded/Add Link to Existing File and Open": {
      "Open link in active pane": {
        "value": false,
        "description": "Open the link in the current active pane (on) or a new pane (off)."
      }
    },
    "Downloaded/Add Link to New Page and Open": {
      "Open link in active pane": {
        "value": false,
        "description": "Open the link in the current active pane (on) or a new pane (off)."
      }
    },
    "Downloaded/Add Next Step in Process": {
      "Starting arrowhead": {
        "value": "none",
        "valueset": [
          "none",
          "arrow",
          "triangle",
          "bar",
          "dot"
        ]
      },
      "Ending arrowhead": {
        "value": "triangle",
        "valueset": [
          "none",
          "arrow",
          "triangle",
          "bar",
          "dot"
        ]
      },
      "Line points": {
        "value": 0,
        "description": "Number of line points between start and end"
      },
      "Gap between elements": {
        "value": 100
      },
      "Wrap text at (number of characters)": {
        "value": 25
      },
      "Fix width": {
        "value": true,
        "description": "The object around the text should have fix width to fit the wrapped text"
      }
    },
    "Downloaded/Auto Layout": {
      "Layout Options JSON": {
        "height": "450px",
        "value": "{\n      \"org.eclipse.elk.layered.crossingMinimization.semiInteractive\": \"true\",\n      \"org.eclipse.elk.layered.considerModelOrder.components\": \"FORCE_MODEL_ORDER\"\n}",
        "description": "You can use layout options to configure the layout algorithm. A list of all options and further details of their exact effects is available in <a href=\"http://www.eclipse.org/elk/reference.html\" rel=\"nofollow\">ELK's documentation</a>."
      }
    },
    "Downloaded/Box Each Selected Groups": {
      "Prompt for padding?": true,
      "Default padding": {
        "value": 10,
        "description": "Padding between the bounding box of the selected elements, and the box the script creates"
      },
      "Remember last padding?": false
    },
    "Downloaded/Box Selected Elements": {
      "Prompt for padding?": true,
      "Default padding": {
        "value": 10,
        "description": "Padding between the bounding box of the selected elements, and the box the script creates"
      }
    },
    "Downloaded/Connect elements": {
      "Starting arrowhead": {
        "value": "none",
        "valueset": [
          "none",
          "arrow",
          "triangle",
          "bar",
          "dot"
        ]
      },
      "Ending arrowhead": {
        "value": "triangle",
        "valueset": [
          "none",
          "arrow",
          "triangle",
          "bar",
          "dot"
        ]
      },
      "Line points": {
        "value": 1,
        "description": "Number of line points between start and end"
      }
    },
    "Downloaded/Convert selected text elements to sticky notes": {
      "Border color": {
        "value": "#000000",
        "description": "Any legal HTML color (#000000, rgb, color-name, etc.). Set to 'transparent' for transparent color."
      },
      "Background color": {
        "value": "transparent",
        "description": "Background color of the sticky note. Set to 'transparent' for transparent color."
      },
      "Background fill style": {
        "value": "solid",
        "description": "Fill style of the sticky note",
        "valueset": [
          "hachure",
          "cross-hatch",
          "solid"
        ]
      },
      "Max sticky note width": {
        "value": "600",
        "description": "Maximum width of new sticky note. If text is longer, it will be wrapped",
        "valueset": [
          "400",
          "600",
          "800",
          "1000",
          "1200",
          "1400",
          "2000"
        ]
      }
    },
    "Downloaded/Text to Sticky Notes": {
      "Border color": {
        "value": "black",
        "description": "Any legal HTML color (#000000, rgb, color-name, etc.). Set to 'transparent' for transparent color."
      },
      "Background color": {
        "value": "gold",
        "description": "Background color of the sticky note. Set to 'transparent' for transparent color."
      },
      "Background fill style": {
        "value": "solid",
        "description": "Fill style of the sticky note",
        "valueset": [
          "hachure",
          "cross-hatch",
          "solid"
        ]
      },
      "Max sticky note width": {
        "value": "600",
        "description": "Maximum width of new sticky note. If text is longer, it will be wrapped",
        "valueset": [
          "400",
          "600",
          "800",
          "1000",
          "1200",
          "1400",
          "2000"
        ]
      },
      "Sticky note width": {
        "value": "100",
        "description": "Preferred width of the sticky note. Set to 0 if unset."
      },
      "Sticky note height": {
        "value": "120",
        "description": "Preferred height of the sticky note. Set to 0 if unset."
      },
      "Rows per column": {
        "value": "3",
        "description": "If multiple text elements are converted to sticky notes in one step, how many rows before a next column is created. Only effective if fixed width & height are given. 0 for unset."
      },
      "Gap": {
        "value": "10",
        "description": "Gap between rows and columns"
      }
    },
    "Downloaded/Set background color of unclosed line object by adding a shadow clone": {
      "Background Color": {
        "value": "DimGray",
        "description": "Default background color of the 'shadow' object. Any valid html css color value"
      },
      "Fill Style": {
        "value": "hachure",
        "valueset": [
          "hachure",
          "cross-hatch",
          "solid"
        ],
        "description": "Default fill style of the 'shadow' object."
      },
      "Inherit fill stroke width": {
        "value": true,
        "description": "This will impact the densness of the hachure or cross-hatch fill. Use the stroke width of the line object for which the shadow is created. If set to false, the script will use a stroke width of 2."
      },
      "Group 'shadow' with original": {
        "value": true,
        "description": "If the toggle is on then the shadow object that is created will be grouped with the unclosed original object."
      }
    },
    "Downloaded/Scribble Helper": {
      "Default action": {
        "value": "Text",
        "valueset": [
          "Text",
          "Sticky",
          "Wrap"
        ],
        "description": "What type of element should CTRL/CMD+ENTER create. TEXT: A regular text element. STICKY: A sticky note with border color and background color (using the current setting of the canvas). STICKY: A sticky note with transparent border and background color."
      }
    },
    "Downloaded/Palette loader": {
      "Palette folder": {
        "value": "Excalidraw/Palettes",
        "description": "The path to the folder where you store the Excalidraw Palettes"
      },
      "Light-gray": {
        "value": "#505050",
        "description": "Base light-gray used for mixing with the accent color to generate the palette light-gray"
      },
      "Dark-gray": {
        "value": "#e0e0e0",
        "description": "Base dark-gray used for mixing with the accent color to generate the palette dark-gray"
      }
    },
    "Downloaded/Mindmap format": {
      "MindMap Format": {
        "value": "Excalidraw/MindMap Format",
        "description": "This is prepared for the namespace of MindMap Format and does not need to be modified"
      },
      "default gap": {
        "value": 10,
        "description": "Interval size of element"
      },
      "curve length": {
        "value": 40,
        "description": "The length of the curve part in the mind map line"
      },
      "length between element and line": {
        "value": 50,
        "description": "The distance between the tail of the connection and the connecting elements of the mind map"
      }
    },
    "Downloaded/Lighten background color": {
      "Step size": {
        "value": 2,
        "description": "Step size in percentage for making the color lighter"
      }
    },
    "Downloaded/Fixed vertical distance between centers": {
      "Prompt for distance?": true,
      "Default distance": {
        "value": 10,
        "description": "Fixed vertical distance between centers"
      },
      "Remember last distance?": false
    },
    "Downloaded/Fixed spacing": {
      "Prompt for spacing?": true,
      "Default spacing": {
        "value": 10,
        "description": "Fixed horizontal spacing between elements"
      },
      "Remember last spacing?": false
    },
    "Downloaded/Fixed inner distance": {
      "Prompt for distance?": true,
      "Default distance": {
        "value": 10,
        "description": "Fixed horizontal distance between centers"
      },
      "Remember last distance?": false
    },
    "Downloaded/Fixed horizontal distance between centers": {
      "Prompt for distance?": true,
      "Default distance": {
        "value": 10,
        "description": "Fixed horizontal distance between centers"
      },
      "Remember last distance?": false
    },
    "Downloaded/Ellipse Selected Elements": {
      "Prompt for padding?": true,
      "Default padding": {
        "value": 10,
        "description": "Padding between the bounding box of the selected elements, and the ellipse the script creates"
      }
    }
  },
  "defaultTrayMode": true,
  "previousRelease": "1.9.28",
  "showReleaseNotes": true,
  "showNewVersionNotification": true,
  "latexBoilerplate": "\\color{blue}",
  "taskboneEnabled": false,
  "taskboneAPIkey": "",
  "pinnedScripts": [],
  "customPens": [
    {
      "type": "default",
      "freedrawOnly": false,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 0,
      "roughness": 0,
      "penOptions": {
        "highlighter": false,
        "constantPressure": false,
        "hasOutline": false,
        "outlineWidth": 1,
        "options": {
          "thinning": 0.6,
          "smoothing": 0.5,
          "streamline": 0.5,
          "easing": "easeOutSine",
          "start": {
            "cap": true,
            "taper": 0,
            "easing": "linear"
          },
          "end": {
            "cap": true,
            "taper": 0,
            "easing": "linear"
          }
        }
      }
    },
    {
      "type": "highlighter",
      "freedrawOnly": true,
      "strokeColor": "#FFC47C",
      "backgroundColor": "#FFC47C",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": null,
      "penOptions": {
        "highlighter": true,
        "constantPressure": true,
        "hasOutline": true,
        "outlineWidth": 4,
        "options": {
          "thinning": 1,
          "smoothing": 0.5,
          "streamline": 0.5,
          "easing": "linear",
          "start": {
            "taper": 0,
            "cap": true,
            "easing": "linear"
          },
          "end": {
            "taper": 0,
            "cap": true,
            "easing": "linear"
          }
        }
      }
    },
    {
      "type": "finetip",
      "freedrawOnly": false,
      "strokeColor": "#3E6F8D",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 0.5,
      "roughness": 0,
      "penOptions": {
        "highlighter": false,
        "hasOutline": false,
        "outlineWidth": 1,
        "constantPressure": true,
        "options": {
          "smoothing": 0.4,
          "thinning": -0.5,
          "streamline": 0.4,
          "easing": "linear",
          "start": {
            "taper": 5,
            "cap": false,
            "easing": "linear"
          },
          "end": {
            "taper": 5,
            "cap": false,
            "easing": "linear"
          }
        }
      }
    },
    {
      "type": "fountain",
      "freedrawOnly": false,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "roughness": 0,
      "penOptions": {
        "highlighter": false,
        "constantPressure": false,
        "hasOutline": false,
        "outlineWidth": 1,
        "options": {
          "smoothing": 0.2,
          "thinning": 0.6,
          "streamline": 0.2,
          "easing": "easeInOutSine",
          "start": {
            "taper": 150,
            "cap": true,
            "easing": "linear"
          },
          "end": {
            "taper": 1,
            "cap": true,
            "easing": "linear"
          }
        }
      }
    },
    {
      "type": "marker",
      "freedrawOnly": true,
      "strokeColor": "#B83E3E",
      "backgroundColor": "#FF7C7C",
      "fillStyle": "dashed",
      "strokeWidth": 2,
      "roughness": 3,
      "penOptions": {
        "highlighter": false,
        "constantPressure": true,
        "hasOutline": true,
        "outlineWidth": 4,
        "options": {
          "thinning": 1,
          "smoothing": 0.5,
          "streamline": 0.5,
          "easing": "linear",
          "start": {
            "taper": 0,
            "cap": true,
            "easing": "linear"
          },
          "end": {
            "taper": 0,
            "cap": true,
            "easing": "linear"
          }
        }
      }
    },
    {
      "type": "thick-thin",
      "freedrawOnly": true,
      "strokeColor": "#CECDCC",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 0,
      "roughness": null,
      "penOptions": {
        "highlighter": true,
        "constantPressure": true,
        "hasOutline": false,
        "outlineWidth": 1,
        "options": {
          "thinning": 1,
          "smoothing": 0.5,
          "streamline": 0.5,
          "easing": "linear",
          "start": {
            "taper": 0,
            "cap": true,
            "easing": "linear"
          },
          "end": {
            "cap": true,
            "taper": true,
            "easing": "linear"
          }
        }
      }
    },
    {
      "type": "thin-thick-thin",
      "freedrawOnly": true,
      "strokeColor": "#CECDCC",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 0,
      "roughness": null,
      "penOptions": {
        "highlighter": true,
        "constantPressure": true,
        "hasOutline": false,
        "outlineWidth": 1,
        "options": {
          "thinning": 1,
          "smoothing": 0.5,
          "streamline": 0.5,
          "easing": "linear",
          "start": {
            "cap": true,
            "taper": true,
            "easing": "linear"
          },
          "end": {
            "cap": true,
            "taper": true,
            "easing": "linear"
          }
        }
      }
    },
    {
      "type": "default",
      "freedrawOnly": false,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 0,
      "roughness": 0,
      "penOptions": {
        "highlighter": false,
        "constantPressure": false,
        "hasOutline": false,
        "outlineWidth": 1,
        "options": {
          "thinning": 0.6,
          "smoothing": 0.5,
          "streamline": 0.5,
          "easing": "easeOutSine",
          "start": {
            "cap": true,
            "taper": 0,
            "easing": "linear"
          },
          "end": {
            "cap": true,
            "taper": 0,
            "easing": "linear"
          }
        }
      }
    },
    {
      "type": "default",
      "freedrawOnly": false,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 0,
      "roughness": 0,
      "penOptions": {
        "highlighter": false,
        "constantPressure": false,
        "hasOutline": false,
        "outlineWidth": 1,
        "options": {
          "thinning": 0.6,
          "smoothing": 0.5,
          "streamline": 0.5,
          "easing": "easeOutSine",
          "start": {
            "cap": true,
            "taper": 0,
            "easing": "linear"
          },
          "end": {
            "cap": true,
            "taper": 0,
            "easing": "linear"
          }
        }
      }
    },
    {
      "type": "default",
      "freedrawOnly": false,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 0,
      "roughness": 0,
      "penOptions": {
        "highlighter": false,
        "constantPressure": false,
        "hasOutline": false,
        "outlineWidth": 1,
        "options": {
          "thinning": 0.6,
          "smoothing": 0.5,
          "streamline": 0.5,
          "easing": "easeOutSine",
          "start": {
            "cap": true,
            "taper": 0,
            "easing": "linear"
          },
          "end": {
            "cap": true,
            "taper": 0,
            "easing": "linear"
          }
        }
      }
    }
  ],
  "numberOfCustomPens": 0,
  "pdfScale": 4,
  "pdfBorderBox": true,
  "pdfGapSize": 20,
  "pdfGroupPages": false,
  "pdfLockAfterImport": true,
  "pdfNumColumns": 1,
  "pdfNumRows": 1,
  "pdfDirection": "right",
  "pdfImportScale": 0.3,
  "laserSettings": {
    "DECAY_LENGTH": 50,
    "DECAY_TIME": 1000,
    "COLOR": "#ff0000"
  }
}